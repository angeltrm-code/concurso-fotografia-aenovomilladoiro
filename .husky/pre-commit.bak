#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# Verificar archivos sensibles
echo "üîç Verificando archivos sensibles..."

# Lista de patrones sensibles a buscar
SENSITIVE_PATTERNS=(
  "EMAIL_PASS="
  "PASSWORD="
  "SECRET="
  "KEY="
  "TOKEN="
  "API_KEY="
  "PRIVATE_KEY="
)

# Lista de archivos a ignorar en la b√∫squeda
IGNORE_FILES=(
  ".env.example"
  "README.md"
  "CHANGELOG.md"
  "LICENSE"
)

# Funci√≥n para verificar si un archivo debe ser ignorado
should_ignore_file() {
  local file=$1
  for ignore in "${IGNORE_FILES[@]}"; do
    if [[ $file == *"$ignore"* ]]; then
      return 0
    fi
  done
  return 1
}

# Buscar patrones sensibles en los archivos modificados
FOUND_SENSITIVE=false
for file in $(git diff --cached --name-only); do
  if ! should_ignore_file "$file"; then
    for pattern in "${SENSITIVE_PATTERNS[@]}"; do
      if git diff --cached "$file" | grep -q "$pattern"; then
        echo "‚ùå ADVERTENCIA: Se encontr√≥ un patr√≥n sensible en $file: $pattern"
        FOUND_SENSITIVE=true
      fi
    done
  fi
done

# Verificar si hay archivos .env en el commit
if git diff --cached --name-only | grep -q "\.env$"; then
  echo "‚ùå ERROR: No se permite hacer commit de archivos .env"
  echo "Por favor, aseg√∫rate de que .env est√° en .gitignore"
  exit 1
fi

# Si se encontraron patrones sensibles, preguntar confirmaci√≥n
if [ "$FOUND_SENSITIVE" = true ]; then
  echo "‚ö†Ô∏è  Se encontraron posibles datos sensibles en los archivos."
  echo "¬øEst√°s seguro de que quieres continuar con el commit? (y/N)"
  read -r response
  if [[ ! "$response" =~ ^[Yy]$ ]]; then
    echo "‚ùå Commit cancelado."
    exit 1
  fi
fi

# Verificar tama√±o de archivos
MAX_FILE_SIZE=5242880 # 5MB
for file in $(git diff --cached --name-only); do
  size=$(git cat-file -s "HEAD:$file" 2>/dev/null || echo 0)
  if [ "$size" -gt "$MAX_FILE_SIZE" ]; then
    echo "‚ùå ERROR: El archivo $file excede el tama√±o m√°ximo permitido (5MB)"
    exit 1
  fi
done

echo "‚úÖ Verificaci√≥n de seguridad completada" 